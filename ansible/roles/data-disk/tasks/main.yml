- name: Fail if data disk ID is missing
  fail:
    msg: "cloudypad_data_disk_id must be set"
  when: cloudypad_data_disk_id is not defined

- name: copy wait-for-disk.sh to /usr/local/bin
  become: true
  copy:
    src: wait-for-disk.sh
    dest: /usr/local/bin/wait-for-disk.sh
    mode: '0755'
 
# After provisioning, the data disk may not be available immediately.
# eg. if instance was already provisioned and a new disk is attached with an update
# it may take a few moments to be visible on host
- name: Wait for data disk to be available
  shell: /usr/local/bin/wait-for-disk.sh "{{ cloudypad_data_disk_id }}"

# depending on providers attached disk can be found under /dev/disk/by-id with various naming conventions
# filter through available disks and find the one matching the data disk ID
- name: Find disk matching data disk ID
  set_fact:
    cloudypad_data_disk_name: >-
      {{
        hostvars[inventory_hostname].ansible_devices
        | dict2items
        | selectattr('value.links.ids', 'defined') 
        | selectattr('value.links.ids', 'match', '.*' + cloudypad_data_disk_id)
        | map(attribute='key')
        | list
        | first
      }}

- debug:
    msg: "Found disk for '{{ cloudypad_data_disk_id }}': '{{ cloudypad_data_disk_name }}'"

- set_fact:
    cloudypad_data_disk_path: "/dev/{{ cloudypad_data_disk_name }}"

- name: fail if no disk was found
  fail:
    msg: "No disk found matching data disk ID '{{ cloudypad_data_disk_id }}'"
  when: cloudypad_data_disk_name is not defined

- name: Format Cloudy Pad data disk (ext4)
  filesystem:
    fstype: "ext4"
    dev: "{{ cloudypad_data_disk_path }}"

- name: Ensure Cloudy Pad data directory exists
  file:
    path: "{{ cloudypad_data_root }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

# Some data may already be present on disk before mounting the data disk
# To avoid losing data, move it to a temporary location before mounting the data disk
# Copy and execute bash script to move data before mounting
- name: Copy move-data-before-disk-mount.sh script
  template:
    src: move-data-before-disk-mount.sh
    dest: /usr/local/bin/move-data-before-disk-mount.sh
    mode: '0755'

- name: Move existing data before disk mount (if any)
  shell: /usr/local/bin/move-data-before-disk-mount.sh

- name: Mount and configure fstab for Cloudy Pad data disk
  mount:
    path: "{{ cloudypad_data_root }}"
    src: "{{ cloudypad_data_disk_path }}"
    fstype: "ext4"
    state: mounted

    # Do not fail if the disk is not found at boot
    # Oherwise instance won't boot at all if disk is missing
    # Better have an instance that boots with data loss rather than unbootable instance
    opts: "defaults,nofail"

# Copy and execute bash script to move data back after mounting
- name: Copy move-data-after-disk-mount.sh script
  template:
    src: move-data-after-disk-mount.sh
    dest: /usr/local/bin/move-data-after-disk-mount.sh
    mode: '0755'

- name: Move existing data back after disk mount (if any)
  shell: /usr/local/bin/move-data-after-disk-mount.sh
