# May conflict with NVIDIA drivers loading during boot
- name: Blacklist nouveau drivers
  register: nvidia_nouveau_driver_blacklist
  copy:
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    content: |
      blacklist nouveau
      options nouveau modeset=0

- name: Reboot after nouveau driver blacklist update
  when: nvidia_nouveau_driver_blacklist.changed
  reboot:
    post_reboot_delay: 10

# NVIDIA driver install require gcc and make
# and that gcc version matches the one used to compile kernel
# Identify gcc version used for kernel and install expected gcc version
- name: remove packages used by previous install methods
  register: previous_install_method_package_remove
  apt:
    name: "{{ item }}"
    state: absent
    purge: true
  loop:
    - build-essential
    - gcc-multilib

- name: Reboot after previous install method package removal
  when: previous_install_method_package_remove.changed
  reboot:
    post_reboot_delay: 10  

- name: install driver required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - make
    - dkms

- name: Fetch kernel configuration file
  slurp:
    src: "/boot/config-{{ ansible_kernel }}"
  register: kernel_config_file

- name: Decode kernel configuration content
  set_fact:
    kernel_config_content: "{{ kernel_config_file.content | b64decode }}"

- name: Extract GCC version from kernel configuration
  set_fact:
    gcc_version_raw: "{{ kernel_config_content | regex_search('CONFIG_GCC_VERSION=([0-9]+)', '\\1') | first }}"

- debug:
    msg: "Found raw GCC version '{{ gcc_version_raw }}'"

- name: Transform GCC version into x.y.z format
  set_fact:
    gcc_major_version: >-
      {{ gcc_version_raw[:gcc_version_raw | length - 4] | int }}

- debug:
    msg: "Found GCC version '{{ gcc_major_version }}' from kernel configuration"

- name: Install matching GCC version
  apt:
    name: "gcc-{{ gcc_major_version }}"
    state: present

- name: Set installed GCC version as default
  alternatives:
    name: gcc
    link: /usr/bin/gcc
    path: /usr/bin/gcc-{{ gcc_major_version }}

- name: Set CC as GCC
  alternatives:
    name: cc
    link: /usr/bin/cc
    path: /usr/bin/gcc

- name: Get current NVIDIA driver version (error expected and ignored if driver not installed yet)
  slurp:
    src: /sys/module/nvidia/version
  register: nvidia_driver_version_file
  ignore_errors: true # expected that version file may not yet exist if driver not installed

- name: Set NVIDIA driver version var
  when: nvidia_driver_version_file is success
  set_fact:
    nvidia_driver_version: "{{ nvidia_driver_version_file.content | b64decode | trim }}"

- name: Set NVIDIA driver version var (not installed)
  when: nvidia_driver_version_file is not success
  set_fact:
    nvidia_driver_version: "none"

- name: Show NVIDIA driver version
  ansible.builtin.debug:
    msg: "Current NVIDIA driver version: {{ nvidia_driver_version }}"

# Install driver only if version do not match
# .run file should uninstall any existing version
- name: Download NVIDIA driver installer
  when: nvidia_driver_version != nvidia_driver_dotrun_install_version
  get_url:
    url: https://download.nvidia.com/XFree86/Linux-x86_64/{{ nvidia_driver_dotrun_install_version }}/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run
    dest: /tmp/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run
    mode: '0755'
  retries: 3
  delay: 10
  register: nvidia_driver_download

- name: Download NVIDIA driver SHA256 checksum
  when: nvidia_driver_version != nvidia_driver_dotrun_install_version
  get_url:
    url: https://download.nvidia.com/XFree86/Linux-x86_64/{{ nvidia_driver_dotrun_install_version }}/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run.sha256sum
    dest: /tmp/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run.sha256sum
  retries: 3
  delay: 10
  register: nvidia_checksum_download

- name: Verify SHA256 checksum
  when: nvidia_driver_version != nvidia_driver_dotrun_install_version
  command:
    chdir: /tmp
    cmd: "sha256sum -c /tmp/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run.sha256sum"
  register: sha256_check
  failed_when: sha256_check.rc != 0

# Use dkms to ensure kernel modules are updated when kernel is updated
- name: Install NVIDIA driver
  when: nvidia_driver_version != nvidia_driver_dotrun_install_version
  command: /tmp/NVIDIA-Linux-x86_64-{{ nvidia_driver_dotrun_install_version }}.run --no-questions --ui=none --dkms

- name: Reboot after dotrun driver install
  when: nvidia_driver_version != nvidia_driver_dotrun_install_version
  reboot:
    post_reboot_delay: 10
