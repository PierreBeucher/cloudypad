name: Release

on:
  push:
    tags:
      - '*'

jobs:
  docker-build-core:
    name: Docker Build Core
    strategy:
      matrix:
        runner: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Cache Nix
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ runner.arch }}
          restore-prefixes-first-match: nix-${{ runner.os }}-

      - name: Build Core container image
        run: CLOUDYPAD_BUILD_CORE_IMAGE_TAG=${GITHUB_REF_NAME#v} nix develop -c task build-core-container

  docker-build-sunshine:
    name: Docker Build Sunshine
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Nix
        uses: nixbuild/nix-quick-install-action@v30

      - name: Cache Nix
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: nix-${{ runner.os }}-${{ runner.arch }}
          restore-prefixes-first-match: nix-${{ runner.os }}-

      - name: Build Sunshine container image
        run: CLOUDYPAD_BUILD_SUNSHINE_IMAGE_TAG=${GITHUB_REF_NAME#v} nix develop -c task build-sunshine-container
